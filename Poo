/**
 * You can edit, run, and share this code.
 * play.kotlinlang.org
 */
fun main() {
//POO - Programação Orientada a Objetos - Simular coisas da realidade na programação
//
//Objetos - possui Estados(nome, idade, endereço, altura e etc), comportamentos(andar, correr, dormir, comer etc)
//a POO ela é dividida
//
//Classes - São modelos que servem para construção de objetos derivados dele mesmo(Ex Classe pessoa)
//as classes recebem atributos(os estados)
//
//Métodos - será as instancias da classe, as formas de agir
 //Estrutura de uma classe
 // class Nome(){ocorridos de um objeto}
 /*
 val ricardo = Pessoa() //instanciando um objeto
 ricardo.nome = "Ricardo "
 ricardo.altura = 2.15
 ricardo.corDosOlhos = "verde"
 ricardo.peso = 100.0
 println(ricardo.altura) //para exibir um atributo em específico*/
    
 //Exercício: Criem um churras e exiba a lista de convidados no console, no min 6 pessoas
    
 /*val convidado1 = Pessoa("Claudio", 1.79, "castanho", 183.0)
 println(convidado1.nome)
 val convidado2 = Pessoa("Juliana", 1.50, "azul", 53.5)
 println(convidado2.nome)
 val convidado3 = Pessoa("Luana", 1.80, "verde", 78.0)
 println(convidado3.nome)
 val convidado4 = Pessoa("Guilherme", 1.75, "castaho", 70.0)
 println(convidado4.nome)
 val convidado5 = Pessoa("Mirela", 1.82, "azul", 79.0)
 println(convidado5.nome)
 val convidado6 = Pessoa("Thiago", 1.76, "castanho", 75.0)
 println(convidado6.nome)*/
    
 var dinossauro = animal("réptil", 'M', "Qualquer lugar no período jusassico",
                        "Carnívoro", 397, true)    
 //println("Meu animal é um "+dinossauro.classe+" ele é "+dinossauro.dieta+" e tem "+dinossauro.idade+" anos")
 dinossauro.Feliz(true)
}
class Pessoa(val nome:String, val altura:Double, val corDosOlhos:String, val peso:Double){
    //declarando atributos para a classe
    /*
    var nome = ""
    var altura = 0.0
    var corDosOlhos = ""
    var peso = 0.0*/
    
}
class animal(val classe:String, val genero:Char, val habitat:String, val dieta:String, val idade:Int, 
            val voa:Boolean){
    
/*fun Atacar(bravo: Boolean){
    if(bravo == true){
    println("Animal atacando")
    }else{
        println("Animal de boa, suavao")
    }*/
   fun Feliz(feliz: Boolean){
    if(feliz == true){
    println("Animal Pulando de Felicidade")
    }else{
        println("Animal de boa")
    }
}   
 //Exercicio: Faça um novo comportamento para o seu animal usando uma nova fun   
    
}
//Métodos - Comportamentos da nossa classe, que os nossos objetos receberão
//eles são declarados usando funções

// Conta No banco

   val contaCorrente = ContaNoBanco(4002, 8922.00, "Safra", "Franco Francescco Aguero") 
    
   contaCorrente.consultarSaldo() 
   
}
class ContaNoBanco(var senha: Int, var saldo: Double,
                  var banco: String, var dono: String){
   fun consultarSaldo(){
       println("O saldo da sua conta é R$$saldo")
       
   } 
    
 }
   
